/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CashierRole;

import Blockchain.searchNewestBlockAPI;
import Blockchain.updateBlockChainAPI;
import static Blockchain.updateBlockChainAPI.updateBlockchain;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lijianxi
 */
public class CashierWorkAreaJPanel extends javax.swing.JPanel implements updateBlockChainAPI {

    /**
     * Creates new form CashierJPanle
     */
    private JPanel processPanel;
    private EcoSystem business;
    private DB4OUtil dB4OUtil;
    private UserAccount u;
    private Enterprise e;

    public CashierWorkAreaJPanel(JPanel processPanel, EcoSystem business, DB4OUtil dB4OUtil, UserAccount u, Enterprise e) {
        initComponents();
        /*We can see all the request of exchange in this panel, 
        if the Trader did not selected a specific Cashier Enterprise
        we can assign the exchange task to our own Enterprise by clicking assign to us.
        In the DealWithTransaction 
         */
        this.processPanel = processPanel;
        this.business = business;
        this.dB4OUtil = dB4OUtil;
        this.e = e;
        this.u = u;
        e.getWallet().setBlockChaine(searchNewestBlockAPI.searchNewestBlock(business));
        //updateBlockChainAPI.updateBlockchain(business, e);
     
        blockChainUpdate();
           populateTable();
    }
       public void blockChainUpdate(){
       updateBlockchain(business,e);   
    }

    public void populateTable() {
        txtBitcoin.setText(""+e.getWallet().refreshCount());
        txtCash.setText(""+e.getBalance());
        DefaultTableModel modelBuying = (DefaultTableModel) TblBuying.getModel();
        modelBuying.setRowCount(0);
        DefaultTableModel modelSelling = (DefaultTableModel) TblSelling.getModel();
        modelSelling.setRowCount(0);
        for (WorkRequest wr : business.getWorkQueue().getWorkRequestList()) {
            if (wr.getStatus().equals("Withdraw Confirm needed") && wr.getT().getTo() == e.getenterpriseId()) {
                Object[] row = new Object[3];
                row[0] = wr;
                row[1] = wr.getT().getBtcAmount();
                row[2] = wr.getStatus();
                modelSelling.addRow(row);
            } else if (wr.getStatus().equals("Cash Transaction started") && wr.getT().getFrom() == e.getenterpriseId()) {
                
                Object[] row = new Object[3];
                row[0] = wr;
                row[1] = wr.getT().getBtcAmount();
                row[2] = wr.getStatus();
                modelBuying.addRow(row);
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TxtBuyPrice = new javax.swing.JTextField();
        TxtSellPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblBuying = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TblSelling = new javax.swing.JTable();
        BtnSetPrice = new javax.swing.JButton();
        BtnSave = new javax.swing.JButton();
        BtnViewTransaction = new javax.swing.JButton();
        txtCash = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        BtnApproveReq = new javax.swing.JButton();
        BtnDeclineReq = new javax.swing.JButton();
        BtnLogOut = new javax.swing.JButton();
        txtBitcoin = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        jLabel2.setText("CashierWorkAreaJPanel");

        jLabel1.setText("Buy In Unit Price");

        jLabel4.setText("Sell Out Unit Price");

        TxtBuyPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtBuyPriceActionPerformed(evt);
            }
        });

        TxtSellPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtSellPriceActionPerformed(evt);
            }
        });

        TblBuying.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "From", "Amount", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TblBuying);
        if (TblBuying.getColumnModel().getColumnCount() > 0) {
            TblBuying.getColumnModel().getColumn(0).setResizable(false);
            TblBuying.getColumnModel().getColumn(1).setResizable(false);
            TblBuying.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel3.setText("Requset of buying coins from Cashier");

        jLabel5.setText("Request of selling coins to Cashier");

        TblSelling.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "From", "Amount", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TblSelling);
        if (TblSelling.getColumnModel().getColumnCount() > 0) {
            TblSelling.getColumnModel().getColumn(0).setResizable(false);
            TblSelling.getColumnModel().getColumn(1).setResizable(false);
            TblSelling.getColumnModel().getColumn(2).setResizable(false);
        }

        BtnSetPrice.setText("SetPrice");
        BtnSetPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSetPriceActionPerformed(evt);
            }
        });

        BtnSave.setText("Save");
        BtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSaveActionPerformed(evt);
            }
        });

        BtnViewTransaction.setText("View Transaction History");
        BtnViewTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnViewTransactionActionPerformed(evt);
            }
        });

        jLabel6.setText("Balance:");

        BtnApproveReq.setText("Approve Request");
        BtnApproveReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnApproveReqActionPerformed(evt);
            }
        });

        BtnDeclineReq.setText("Decline Request");
        BtnDeclineReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDeclineReqActionPerformed(evt);
            }
        });

        BtnLogOut.setText("LogOut");
        BtnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLogOutActionPerformed(evt);
            }
        });

        jLabel7.setText("Coin:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(337, 337, 337)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TxtBuyPrice)
                                    .addComponent(TxtSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(BtnSave)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(BtnViewTransaction))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(BtnSetPrice)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel6))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jLabel7)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtBitcoin)
                                            .addComponent(txtCash, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(152, 152, 152)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(172, 172, 172)
                                        .addComponent(jLabel5))
                                    .addComponent(jScrollPane2)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnApproveReq)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(BtnLogOut)
                                .addComponent(BtnDeclineReq)))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnApproveReq)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnDeclineReq)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBitcoin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TxtBuyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSetPrice)
                    .addComponent(txtCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(TxtSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSave)
                    .addComponent(BtnViewTransaction)
                    .addComponent(BtnLogOut))
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TxtBuyPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtBuyPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtBuyPriceActionPerformed

    private void TxtSellPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtSellPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtSellPriceActionPerformed

    private void BtnSetPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSetPriceActionPerformed
       if(Float.parseFloat(TxtBuyPrice.getText())>0){
          Pattern intPattern = Pattern.compile("[+-]?([0-9]*[.])?[0-9]+");
           if(intPattern.matcher(TxtBuyPrice.getText()).matches()){
           e.getWallet().setBuyPrice(Float.parseFloat(TxtBuyPrice.getText()));
      
                       JOptionPane.showMessageDialog(null, "You have set the price!");
       }else{
                JOptionPane.showMessageDialog(null, "Please fill correct number!");
           }
       }
       else{
                       JOptionPane.showMessageDialog(null, "You must set a price!");
       }       
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnSetPriceActionPerformed

    private void BtnViewTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnViewTransactionActionPerformed
        // TODO add your handling code here:
        allTransactionHistoryJPanel athjp = new allTransactionHistoryJPanel(processPanel, business, e);
        processPanel.add("allTransactionHistoryJPanel", athjp);
        CardLayout card = (CardLayout) processPanel.getLayout();
        card.next(processPanel);
    }//GEN-LAST:event_BtnViewTransactionActionPerformed

    private void BtnApproveReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnApproveReqActionPerformed
    int indexB=TblBuying.getSelectedRow();
    int indexS=TblSelling.getSelectedRow();
      if (indexB >= 0) {
            WorkRequest wr = (WorkRequest) TblBuying.getValueAt(indexB, 0);
            
            wr.setStatus("Cash TX Confirm needed");
            JOptionPane.showMessageDialog(null, "You have Approved the request!");
            populateTable();
        }
      else   if (indexS >= 0) {
            WorkRequest wr = (WorkRequest) TblSelling.getValueAt(indexS,0);
            e.setBalance(e.getBalance()-wr.getCashTotal());
                  for (Network n : business.getNetworkList()) {
                for (Enterprise en : n.getEnterpriseDirectory().getEnterpriseList()) {
                    if (en.getenterpriseId() == wr.getT().getFrom()) {
                       float a=en.getBalance()+wr.getCashTotal();
                       en.setBalance(a);
                    }
                }
            }
            wr.setStatus("Withdraw Confirm needed now");
            JOptionPane.showMessageDialog(null, "You have Approved the request!");
            populateTable();
        }else {
            JOptionPane.showMessageDialog(null, "You need to select an Item!");
        }    
     
      
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnApproveReqActionPerformed

    private void BtnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLogOutActionPerformed
        // TODO add your handling code here:
        processPanel.remove(this);
        Component[] componentArray = processPanel.getComponents();
        Component comp = componentArray[componentArray.length - 1];
        JPanel firstPagepanel = (JPanel) comp;
        CardLayout card = (CardLayout) processPanel.getLayout();
        card.previous(processPanel);
        dB4OUtil.storeSystem(business);
    }//GEN-LAST:event_BtnLogOutActionPerformed

    private void BtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSaveActionPerformed
       if(Float.parseFloat(TxtSellPrice.getText())>0){
             Pattern intPattern = Pattern.compile("[+-]?([0-9]*[.])?[0-9]+");
           if(intPattern.matcher(TxtSellPrice.getText()).matches()){
           e.getWallet().setSellPrice(Float.parseFloat(TxtSellPrice.getText()));
      
                       JOptionPane.showMessageDialog(null, "You have set the price!");
       }
           else{
                 JOptionPane.showMessageDialog(null, "Please fill correct number");
           }}
       else{
                       JOptionPane.showMessageDialog(null, "You must set a price!");
       }               // TODO add your handling code here:
    }//GEN-LAST:event_BtnSaveActionPerformed

    private void BtnDeclineReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDeclineReqActionPerformed
    int indexB=TblBuying.getSelectedRow();
    int indexS=TblSelling.getSelectedRow();
      if (indexB >= 0) {
         
            WorkRequest wr = (WorkRequest) TblBuying.getValueAt(indexB, 0);
                e.setBalance(e.getBalance()-wr.getCashTotal());
                  for (Network n : business.getNetworkList()) {
                for (Enterprise en : n.getEnterpriseDirectory().getEnterpriseList()) {
                    if (en.getenterpriseId() == wr.getT().getFrom()) {
                       float a=en.getBalance()+wr.getCashTotal();
                       en.setBalance(a);
                    }
                }}
            
            wr.setStatus("gg");
            JOptionPane.showMessageDialog(null, "You have reufse the request!");
            populateTable();
        } 
      else if (indexS >= 0) {
            WorkRequest wr = (WorkRequest) TblSelling.getValueAt(indexS,0);
            
            wr.setStatus("gg");
            JOptionPane.showMessageDialog(null, "You have refused the request!");
            populateTable();
        }  else {
            JOptionPane.showMessageDialog(null, "You need to select an Item!");
        }    
     
           // TODO add your handling code here:
    }//GEN-LAST:event_BtnDeclineReqActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnApproveReq;
    private javax.swing.JButton BtnDeclineReq;
    private javax.swing.JButton BtnLogOut;
    private javax.swing.JButton BtnSave;
    private javax.swing.JButton BtnSetPrice;
    private javax.swing.JButton BtnViewTransaction;
    private javax.swing.JTable TblBuying;
    private javax.swing.JTable TblSelling;
    private javax.swing.JTextField TxtBuyPrice;
    private javax.swing.JTextField TxtSellPrice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtBitcoin;
    private javax.swing.JTextField txtCash;
    // End of variables declaration//GEN-END:variables
}
