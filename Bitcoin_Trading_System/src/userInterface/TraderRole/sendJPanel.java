/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.TraderRole;

import Blockchain.Transaction;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.InvestorEnterprise;
import Business.Network.Network;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author raywa
 */
public class sendJPanel extends javax.swing.JPanel {

    /**
     * Creates new form sendJPanel
     */
    private JPanel processPanel;
    private EcoSystem business;
    private Enterprise e;

    public sendJPanel(JPanel processPanel, EcoSystem business, Enterprise e) {
        initComponents();
        this.processPanel = processPanel;
        this.business = business;
        this.e = e;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtTotalCoins = new javax.swing.JTextField();
        txtReceiveId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BtnSend = new javax.swing.JButton();

        BtnBack.setText("Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Send");

        jLabel1.setText("Total:");

        jLabel3.setText("Receive Hash:");

        BtnSend.setText("Send");
        BtnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(BtnSend)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                            .addComponent(BtnBack))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtTotalCoins, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                .addComponent(txtReceiveId)))))
                .addContainerGap(676, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalCoins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtReceiveId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnSend)
                    .addComponent(BtnBack))
                .addContainerGap(390, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        // TODO add your handling code here:
        processPanel.remove(this);
        Component[] componentArray = processPanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        TraderWorkAreaJPanel traderArea = (TraderWorkAreaJPanel) component;
        traderArea.populateTbl();
        CardLayout layout = (CardLayout) processPanel.getLayout();
        layout.previous(processPanel);
    }//GEN-LAST:event_BtnBackActionPerformed

    private void BtnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSendActionPerformed

        if (txtTotalCoins.getText().equals(" ") || txtReceiveId.getText().equals(" ")) {
            JOptionPane.showMessageDialog(null, "Please fill the blank");
        } else {
            if (Float.parseFloat(txtTotalCoins.getText()) <= 0) {
                JOptionPane.showMessageDialog(null, "Please input a positive number");
            } else {
                Pattern intPattern = Pattern.compile("^\\d+$");
                if(intPattern.matcher(txtTotalCoins.getText()).matches() &&intPattern.matcher(txtReceiveId.getText()).matches()){
                int a = 0;
                for (Network n : business.getNetworkList()) {
                    for (int i = 0; i < n.getEnterpriseDirectory().getEnterpriseList().size(); i++) {
                        if (Integer.parseInt(txtReceiveId.getText()) == n.getEnterpriseDirectory().getEnterpriseList().get(i).getenterpriseId()) {
                            if(!(Integer.parseInt(txtReceiveId.getText())==e.getenterpriseId())){
                              a = 1;
                            WorkRequest wr = new WorkRequest();
                            Transaction t = new Transaction();
                            t.setBtcAmount(Integer.parseInt(txtTotalCoins.getText()));
                            t.setTo(n.getEnterpriseDirectory().getEnterpriseList().get(i).getenterpriseId());
                            t.setFrom(e.getenterpriseId());
                             t.setLocktime(" ");
                            t.setTransactionDate(new Date());
                            t.refreshTranHashcode();
                            wr.setStatus("P2P Confirm Needed");
                            wr.setT(t);
                            business.getWorkQueue().getWorkRequestList().add(wr);
                            JOptionPane.showMessageDialog(null, "Request submitted");
                            txtReceiveId.setText(" ");
                            txtTotalCoins.setText(" ");
                            break;
                            }else{
                            JOptionPane.showMessageDialog(null, "It doesn't make any sense");
                            }
    
                        }
                    }
//           if(Integer.parseInt(txtReceiveId.getText())={
//           }
                }
            }}
        }    // TODO add your handling code here:
    }//GEN-LAST:event_BtnSendActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtReceiveId;
    private javax.swing.JTextField txtTotalCoins;
    // End of variables declaration//GEN-END:variables
}
